# Правила разработки в Cursor для современного веба

## Основные принципы
[X] SEO-оптимизация
[X] Адаптивный дизайн
[X] Приоритет производительности
[X] Современная эстетика
[X] Доступность

### Правила HTML
[ ] Использовать семантические теги HTML5 (header, nav, main, article, section, footer)
[ ] Добавить мета-теги: charset, viewport, title, description, OpenGraph
[ ] Включать структурированные данные schema.org где уместно
[ ] Устанавливать канонические URL для дублированного контента
[ ] Добавлять атрибуты alt для всех изображений
[ ] Реализовать ленивую загрузку для контента ниже сгиба
[ ] Соблюдать иерархию заголовков (h1-h6)

### Правила CSS/Tailwind
[ ] Мобильный-first подход
[ ] Использовать Tailwind-утилиты для верстки
[ ] Кастомизировать через @layer components/utilities
[ ] Предпочитать CSS Grid/Flexbox для макетов
[ ] Реализовать темную тему через prefers-color-scheme
[ ] Использовать CSS-переходы для интерактива
[ ] Сохранять контрастность текста 4.5:1
[ ] Оптимизировать критический CSS для контента выше сгиба

### Оптимизация изображений
[ ] Конвертировать в WebP формат
[ ] Указывать width/height атрибуты
[ ] Использовать srcset для адаптивных изображений
[ ] Реализовать ленивую загрузку
[ ] Сжимать изображения до <100kb
[ ] Использовать CDN для доставки ассетов
[ ] Добавлять aria-labels для декоративных изображений

### Чек-лист производительности
[ ] Достигать Lighthouse score >90
[ ] Минифицировать CSS/JS
[ ] Откладывать загрузку некритичного JavaScript
[ ] Предзагружать ключевые ресурсы
[ ] Настраивать cache-заголовки
[ ] Использовать современные форматы шрифтов (woff2)
[ ] Ограничивать варианты начертаний шрифтов 2-3 шт

### Современные паттерны дизайна
[ ] Чистая типографическая сетка
[ ] Единая система отступов
[ ] Субтильные анимации (макс 300мс)
[ ] Неоморфные тени
[ ] Градиентные наложения
[ ] Гамбургер-меню для мобильных
[ ] Принцип прогрессивного улучшения

## Процесс проверки
1. Сгенерировать HTML/CSS
2. Сделать скриншот:
   `python tools/screenshot_utils.py output.html`
3. Верифицировать дизайн через LLM:
   `python tools/llm_api.py --prompt "Проверить современные принципы дизайна" --image screenshot.png`
4. Проверить доступность:
   `python tools/web_scraper.py --audit output.html`

## Извлеченные уроки
- Всегда добавлять role="img" для SVG-иконок
- Использовать aria-label вместо title
- Тестировать контрастность по стандартам WCAG
- Применять <picture> для адаптивных изображений
- Избегать сдвигов макета через aspect-ratio
- Предподключать Google Fonts в head
- Устанавливать font-display: swap для FOIT